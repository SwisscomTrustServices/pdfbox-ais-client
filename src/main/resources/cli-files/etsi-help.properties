# The reason for this signature to be created.
signature.reason=Testing signature
# The location where the signature is created.
signature.location=Testing location
# The contact info to embed in the signature to be created.
signature.contactInfo=tester.test@test.com
# The name to embed in the signature to be created.
signature.name=Test Naeme
# The path to input file
local.test.inputFile=
# The prefix for output file
local.test.outputFilePrefix=signed
# The AIS Claimed Identity key. The key is used for starting the correct signature type.
etsi.credentialID=
# The URL of OIDC service to get JWT from.
etsi.oidcUrl=
# Disable SSL check -- for testing purpose
rax.jvm.ssl.check.disabled=
# The client ID of OIDC server.
etsi.clientId=
# The client secret of OIDC server.
etsi.client.secret=
# Key for MTLS OIDC server
client.auth.keyFile=
# Certificate for MTLS OIDC server
client.cert.file=
# OIDC server for retrieving the AUTH code for JWT.
etsi.rax.url=https://rax-dev-cat.dev-scapp.swisscom.com/en/auth/realms/broker/protocol/openid-connect/auth
# OIDC request state
etsi.rax.state=e034ef94-af77-4665-be5a-20f84589ccf6
# OIDC request nonce
etsi.rax.nonce=cbebefb1-8935-4d86-886b-a0aafc5db814
# OIDC request response type
etsi.rax.response_type=code
# OIDC request client ID
etsi.rax.client_id=
# OIDC request scope
etsi.rax.scope=sign
# OIDC redirect uri
etsi.rax.redirect_uri=
# OIDC code challenge method
etsi.rax.code_challenge_method=S256
# The URL of signature server (AIS)
etsi.ais.sign.url=
# Certificate file for MTL of signature server
etsi.crt.file=
# Key of certificate file for MTL of signature server
etsi.crt.key=
# ETSI standard - algorithm OID
etsi.hash.algorithmOID=2.16.840.1.101.3.4.2.1
# ETSI standard - profile
etsi.profile=http://uri.etsi.org/19432/v1.1.1#/creationprofile#
# ETSI standard - signature format
etsi.signature.format=P
# ETSI standard - conformance level
etsi.signature.conformance.level=AdES-B-LTA
# Automatically open or not the browser to RA-X
open.browser=true